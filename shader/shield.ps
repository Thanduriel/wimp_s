#version 330

in vec3 vs_out_position;

layout(location = 0) out vec4 out_FragColor;

layout(std140) uniform Object
{
	mat4 c_mWorldViewProjection;
	vec3 c_vPointOfOrigin;
	float c_fLocalTime;
	float c_fSize;
};

const float MAX_ALPHA = 0.3f;

void main()
{
	vec3 dif = vs_out_position - c_vPointOfOrigin;
	float dx = abs(dif.x * dif.x - c_fLocalTime);
	float dy = abs(dif.y * dif.y - c_fLocalTime);
	float d = abs(dot(dif,dif) - c_fLocalTime);
//	if(d > c_fSize) discard;
	out_FragColor = vec4(0.1,0.1,1,MAX_ALPHA - max(dx,dy) * MAX_ALPHA / c_fSize);
}