#version 330

uniform sampler2D diffuseTex;

in vec3 vs_out_position;
in vec2 vs_out_texCoords;

layout(location = 0) out vec4 out_FragColor;

layout(std140) uniform Object
{
	mat4 c_mWorldViewProjection;
	vec3 c_vPointOfOrigin;
	float c_fLocalTime;
	float c_fSize;
};

const float MAX_ALPHA = 1.0f;
const vec3 BASE_COLOR = vec3(0.1,0.1,1);

void main()
{
	vec3 dif = vs_out_position - c_vPointOfOrigin;
	float dx = abs(dif.x * dif.x - c_fLocalTime);
	float dy = abs(dif.y * dif.y - c_fLocalTime);
	float d = abs(dot(dif,dif) - c_fLocalTime);
//	if(d > c_fSize) discard;
	vec3 col = vec3(1,1,1);//texture(diffuseTex, vs_out_texCoords).xyz /** vec3(0.1-1,0.1-1,0.9-1)*/; // a * scale = a + b <=> a * (scale-1) = b
	out_FragColor = vec4(BASE_COLOR, cos(d)); // MAX_ALPHA - dy * MAX_ALPHA / c_fSize
}