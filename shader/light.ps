#version 330

in vec2 gs_texCoord;
in vec4 gs_center;
in vec3 gs_eyeDirection;
in float gs_radius;

uniform sampler2D screenTex;
uniform sampler2D depthTex;

out vec4 fragColor;

#include "globalubo.glsl"
#include "cameraubo.glsl"

vec4 CalcEyeFromWindow(in float windowZ, in vec3 eyeDirection)
{
  float ndcZ = (2.0 * windowZ - gl_DepthRange.near - gl_DepthRange.far) /
			(gl_DepthRange.far - gl_DepthRange.near);
  float eyeZ = c_vProjection.w / (ndcZ - c_vProjection.z);
  return vec4(eyeDirection * eyeZ, 1);
}

void main()
{	
	vec4 eyePos = CalcEyeFromWindow(texture(depthTex, gs_texCoord).x, gs_eyeDirection);
//	if(eyePos.z > gs_center.z) discard;
	float d = distance(eyePos.xyz, gs_center.xyz);
//	if(d > gs_radius * 7.f) discard;
	fragColor = vec4(1,1,1, 0.15 + (d < gs_radius * 5.f ? 0.75 : 0));
}
